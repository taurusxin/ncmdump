name: CI
env:
  BUILD_TYPE: MinSizeRel
  BUILD_PATH: build
on:
  push:
    branches: [ main ]

jobs:
  build_on_android_armv8a:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build axel unzip

    - name: Configure build
      run: |
        axel -n 4 https://googledownloads.cn/android/repository/android-ndk-r27c-linux.zip
        unzip android-ndk-r27c-linux.zip
        export ANDROID_NDK_ROOT=~/android-ndk-r27c
        cmake -G Ninja -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -B ${{ env.BUILD_PATH }}

    - name: Build
      run: cmake --build ${{ env.BUILD_PATH }} -j 4

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: android_armv8a_build
        path: ${{ env.BUILD_PATH }}/lib/armeabi-v7a/libncmdump.so 

  build_on_linux_arm64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Configure build
      run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -B ${{ env.BUILD_PATH }}

    - name: Build
      run: cmake --build ${{ env.BUILD_PATH }} -j 4

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux_build_arm64
        path: ${{ env.BUILD_PATH }}/ncmdump
